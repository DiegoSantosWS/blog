name: Build & Deploy
on:
  push:
    branches:
      - master
      - develop
env:
  IMAGE_NAME: blog
jobs:
  push:
    name: Push to GHCR -> DigitlOcean
    runs-on: ubuntu-latest
    steps:
      - name: Checking out the repository
        uses: actions/checkout@v2

      # Setting up Docker Builder
      - name: Set up Docker Builder
        uses: docker/setup-buildx-action@v1

      - name: Log into GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - id: read-docker-image-identifiers
        name: Read Docker Image Identifiers
        run: echo "image_repository=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Push to Github Container Registry
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ghcr.io/${{ env.image_repository }}:latest

  deploy:
    name: Deploy to Digital Ocean Droplet
    runs-on: ubuntu-latest
    needs: push

    steps:
      - name: Deploy blog form server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST_DO }} # IP address of the server you wish to ssh into
          username: ${{ secrets.SSH_DO_USERNAME }} # User of the server you want to ssh into
          key: ${{ secrets.SSH_KEY }} # Private or public key of the server

          script: |
            # Stop running container
            docker stop ${{ github.repository_owner }}

            # Remove old container
            docker rm ${{ github.repository_owner }}

            # Login to Github Container Registry
            docker login https://ghcr.io -u ${{ github.repository_owner }} -p ${{ secrets.CR_PAT }}

            # Pull the Docker Image 
            docker pull ghcr.io/diegosantosws1/blog:latest 

            # Run a new container from a new image
            docker run -d --restart always -p 8000:8080 --name $(echo $${{ github.repository }})

            echo 'Deployment successful to digital ocean'
